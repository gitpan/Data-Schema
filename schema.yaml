# the DS schema of standard DS schema, with no subschema or schema
# type definition

# NOTE: unfinished and currently BROKEN

# XXX merge prefix on second+ attr hash keys

def:
  standard_types: &standard_types
    - str
    - set: 1
      one_of: [
        str, string,
        cistr, cistring,
        bool, boolean,
        hash,
        array,
        object, obj,
        #num,
        int, integer,
        float,
        either, or, any,
        all, and
      ]

  #types: &types *standard_types

  first_form: &first_form [str, {set: 1, one_of: *standard_types}]

  # need YAML syntax to merge/add keys from base type, otherwise will
  # be very verbose

  attr_hash_comparable:
    - hash
    - set: 1
      keys:
        one_of: &attr_comparable_one_of [array, {set: 1, of: [any, {set: 1}]}]
        is_one_of: *attr_comparable_one_of
        not_one_of: &attr_comparable_not_one_of [array, {set: 1, of: [any, {set: 1}]}]
        isnt_one_of: *attr_comparable_not_one_of
        is: [any, {set: 1}]
        isnt: &attr_comparable_isnt [any, {set: 1}]
        not: *attr_comparable_isnt

  second_form:
    - array
    - set: 1
      minlen: 2
      elem_regex:
      '^0$': *first_form
      # the rest are attr_hash
      '[1-9]': *attr_hash

  third_form:
    - hash
    - set: 1
    - keys:
        type: str
        def:
          - hash
          - required: 0
            #values_of: *schema # XXX currently can't do this, circular ref

  schema: &schema [either, {of: [first_form, second_form, third_form]}]

type: schema
